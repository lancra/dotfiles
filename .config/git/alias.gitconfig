[alias]
	a = "add"
	an = "add --intent-to-add"
	ap = "add --patch"
	br = "branch"
	bra = "branch --sort=refname --format='%(color:blue)%(committerdate:iso-local) %(color:green)%(refname:short) %(color:red)%(committeremail)'"
	brc = "branch --show-current"
	brg = "!git branch --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}'"
	brl = "!git branch --format '%(refname:short) %(upstream:short)' | awk '{if (!$2) print $1;}'"
	brmn = "!git branch --no-merged ${1-main} #"
	brmy = "!git branch --merged ${1-main} #"
	brn = "branch --sort=-committerdate --format='%(color:blue)%(committerdate:iso-local) %(color:green)%(refname:short) %(color:red)%(committeremail)'"
	bro = "branch --sort=committerdate --format='%(color:blue)%(committerdate:iso-local) %(color:green)%(refname:short) %(color:red)%(committeremail)'"
	bru = "!git for-each-ref --format '  %(color:red)%(refname:lstrip=2)%(color:reset)%(if)%(symref)%(then) -> %(symref:short)%(end)' refs/remotes/${1:-origin}"
	ca = "commit --amend"
	can = "commit --amend --no-edit"
	cge = "config edit --global"
	ci = "commit"
	cif = "commit --fixup"
	civ = "-c commit.verbose=true commit"
	config-sources = "!git config list --show-scope | sed 's/=/\t/' | awk '{OFS=FS=\"\t\"} {t=$1; $1=$2; $2=$3; $3=t; print $1,$3,$2}' | sort -k1,1 -k2 | column -s $'\t' --table --table-columns KEY,SCOPE,VALUE --table-wrap VALUE"
	cp = "cherry-pick"
	cpa = "cherry-pick --abort"
	cpc = "cherry-pick --continue"
	cps = "cherry-pick --skip"
	ddf = "-c diff.external=difft diff"
	ddfs = "-c diff.external=difft diff --staged"
	df = "diff"
	dfd = "!git -c core.pager= df"
	dfe = "!git diff . :!$1"
	dfs = "diff --staged"
	dfsd = "!git -c core.pager= dfs"
	dft = "difftool"
	dftd = "difftool --dir-diff --no-symlinks"
	dl = "-c diff.external=difft log --patch --ext-diff"
	dsh = "-c diff.external=difft sh --ext-diff"
	fe = "fetch"
	fed = "!git fetch origin ${1-main}:${1-main} #"
	gone = "!git brg | xargs -r git branch -D"
	l = "log --format='%C(yellow)%h %C(blue bold)%ci%C(auto)%(decorate) %s'"
	ll = "log --format='%C(yellow)%h %C(blue bold)%ci%C(auto)%(decorate) %s' -50"
	lp = "!git l --grep \"$1:.*\" ${@:2} #"
	ls = "log --format='%C(yellow)%h %C(blue bold)%ci%C(auto)%(decorate) %s' -20"
	mg = "merge --no-ff"
	mga = "merge --abort"
	mgc = "merge --continue"
	mgf = "merge"
	mgt = "mergetool"
	pushf = "push --force-with-lease"
	rb = "rebase"
	rba = "rebase --abort"
	rbc = "rebase --continue"
	rbi = "rebase --interactive"
	rt = "restore"
	rtp = "restore --patch"
	rts = "restore --staged"
	rtsp = "restore --staged --patch"
	sh = "show"
	shs = "show --stat"
	st = "status --short --untracked-files"
	sta = "stash"
	staa = "stash apply"
	stad = "stash drop"
	stal = "stash list"
	stao = "stash pop"
	stap = "stash push"
	stas = "stash show"
	sw = "switch"
	swapu = "!git swd && git pull"
	swd = "!git switch $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')"
	swm = "switch main"
	swn = "!git switch --no-track --create $1 origin/${2-main} #"
	t = "log --tags --decorate --oneline --simplify-by-decoration"
	tl = "t -1 --format='%(describe:tags)'"
	wipe = "!git reset --hard && git clean -fd"
